


--wrench command

function wp(type, packet)
    if packet == ("action|input\n|text|/wp") then
        mode_wm = "pull"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9wrench mode set to `3pull")
        function Wrench(varlist)
            if varlist[0] == "OnDialogRequest" and varlist[1]:find("add_button|report_player|") then
                x = varlist[1]:removeColors()
                x2 = x:match("add_label_with_icon|big|(%w+)")
                SendPacket(2, "action|input\n|text|/pull "..x2)
            return true
            end
        end
        AddCallback("Wrench", "OnVarlist", Wrench)
        return true
    end
end

AddCallback("wp","OnPacket", wp)

function wk(type, packet)
    if packet == ("action|input\n|text|/wk") then
        mode_wm = "kick"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9wrench mode set to `3kick")
        function Wrench(varlist)
            if varlist[0] == "OnDialogRequest" and varlist[1]:find("add_button|report_player|") then
                x = varlist[1]:removeColors()
                x2 = x:match("add_label_with_icon|big|(%w+)")
                SendPacket(2, "action|input\n|text|/kick "..x2)
            return true
            end
        end
        AddCallback("Wrench", "OnVarlist", Wrench)     
        return true
    end
end

AddCallback("wk","OnPacket", wk)

function wb(type, packet)
    if packet == ("action|input\n|text|/wb") then
        mode_wm = "ban"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9wrench mode set to `3ban")
        function Wrench(varlist)
            if varlist[0] == "OnDialogRequest" and varlist[1]:find("add_button|report_player|") then
                x = varlist[1]:removeColors()
                x2 = x:match("add_label_with_icon|big|(%w+)")
                SendPacket(2, "action|input\n|text|/ban "..x2)
            return true
            end
        end
        AddCallback("Wrench", "OnVarlist", Wrench)
        return true
    end
end

AddCallback("wb","OnPacket", wb)

function woff(type, packet)
    if packet == ("action|input\n|text|/woff") then
        mode_wm = "off"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9wrench mode is now `3off")
        RemoveCallback("Wrench") 
        return true
    end
end

AddCallback("woff","OnPacket", woff)




--world command

function pullall(type, packet)
    if packet == ("action|input\n|text|/pullall") then
        RunThread(function()
            pullallthread()
    end)
    return true
    end
end
    
AddCallback("pullall","OnPacket", pullall)

function pullallthread()
    OnConsoleMessage("`0[ `3Yoshiro `0] `9pulling all players")
    for _,player in pairs(GetPlayers()) do
        SendPacket(2,  "action|input\n|text|/pull " .. player.name:sub(3, -3))
    end
end

function banall(type, packet)
    if packet == ("action|input\n|text|/banall") then
        RunThread(function()
            banallthread()
    end)
    return true
    end
end
    
AddCallback("banall","OnPacket", banall)

function banallthread()
    OnConsoleMessage("`0[ `3Yoshiro `0] `9baning all players")
    for _,player in pairs(GetPlayers()) do
        SendPacket(2,  "action|input\n|text|/ban " .. player.name:sub(3, -3))
    end
end

function kickall(type, packet)
    if packet == ("action|input\n|text|/kickall") then
        RunThread(function()
            kickallthread()
    end)
    return true
    end
end
    
AddCallback("kickall","OnPacket", kickall)

function kickallthread()
    OnConsoleMessage("`0[ `3Yoshiro `0] `9kicking all players")
    for _,player in pairs(GetPlayers()) do
        SendPacket(2,  "action|input\n|text|/kick " .. player.name:sub(3, -3))
    end
end

function tradeall(type, packet)
    if packet == ("action|input\n|text|/tradeall") then
        RunThread(function()
            tradeallthread()
    end)
    return true
    end
end
    
AddCallback("tradeall","OnPacket", tradeall)

function tradeallthread()
    OnConsoleMessage("`0[ `3Yoshiro `0] `9trading all players")
    for _,player in pairs(GetPlayers()) do
        SendPacket(2,  "action|input\n|text|/trade " .. player.name:sub(3, -3))
    end
end



--spam command

set_spam_text = "Set your spam text and delay !"
set_spam_delay = 5
spamming = false
function setspam()
    if set_spam_delay > 2 then
        while spamming do
            SendPacket(2, "action|input\n|text|`"..math.random(1,9)..set_spam_text)
            Sleep(set_spam_delay * 1000)
		end
	elseif set_spam_delay <= 2 then
    OnConsoleMessage("`0[ `3Yoshiro `0] `9delay cant be less than 2 !")
	end
end

function set_spam_text(type, packet)
    if packet:find("action|input\n|text|/spamtext ") then
        set_spam_text = packet:gsub("action|input\n|text|/spamtext ", "")
                OnConsoleMessage("`0[ `3Yoshiro `0] `9spam text set to :`3 "..set_spam_text)
          return true
        end
    end
    
AddCallback("set_spam_text","OnPacket", set_spam_text)

function set_spam_text2(type, packet)
    if packet:find("action|input\n|text|/spamt ") then
        set_spam_text = packet:gsub("action|input\n|text|/spamt ", "")
                OnConsoleMessage("`0[ `3Yoshiro `0] `9spam text set to :`3 "..set_spam_text)
          return true
        end
    end

AddCallback("set_spam_text2","OnPacket", set_spam_text2)

function set_spam_delay(type, packet)
    if packet:find("action|input\n|text|/spamdelay") then
        set_spam_delay = packet:gsub("action|input\n|text|/spamdelay", "")
            set_spam_delay = tonumber(set_spam_delay)
                OnConsoleMessage("`0[ `3Yoshiro `0] `9spam delay set to : `3"..set_spam_delay.." `9Seconds ")
          return true
        end
    end

AddCallback("set_spam_delay","OnPacket", set_spam_delay)

function set_spam_delay1(type, packet)
    if packet:find("action|input\n|text|/sd") then
        set_spam_delay = packet:gsub("action|input\n|text|/sd", "")
            set_spam_delay = tonumber(set_spam_delay)
                OnConsoleMessage("`0[ `3Yoshiro `0] `9spam delay set to : `3"..set_spam_delay.." `9Seconds ")
          return true
        end
    end

AddCallback("set_spam_delay1","OnPacket", set_spam_delay1)

function start_stop_spam(type, packet)
        if packet == ("action|input\n|text|//") then
            if spamming then
                OnConsoleMessage("`0[ `3Yoshiro `0] `9spam is `3off")
                spamming = false
               else
                OnConsoleMessage("`0[ `3Yoshiro `0] `9spam is `3on")
                spamming = true
            end
               RunThread(function()
                       setspam()
               end)
        return true
        end
    end
AddCallback("start_stop_spam","OnPacket", start_stop_spam)



--safe command

function casino_help_when_join(type, packet)
    if packet:find("action|input\n|text|/safe ") then
        casino_help_when_join = packet:gsub("action|input\n|text|/safe ", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Updated : `3"..casino_help_when_joinx)
                    function collectItems(range, ispos)
                        if not ispos then
                            range = (range or 10)*32
                        end
                    
                        pkt = {}
                        pkt.type = 11
                        for _, obj in pairs(GetObjects()) do
                            posx = math.abs(GetLocal().pos_x-obj.pos_x)
                            posy = math.abs(GetLocal().pos_y-obj.pos_y)
                    
                            if posx<range and posy<range then
                                pkt.int_data = obj.oid
                                pkt.pos_x = obj.pos_x
                                pkt.pos_y = obj.pos_y
                                SendPacketRaw(pkt)
                            end
                        end
                    end
                    collectItems()
                    -- unacces leave
                    OnConsoleMessage("`0[ `3Yoshiro `0] `9unaccessing")
                    SendPacket(2, "action|input\n|text|/unaccess")
                    SendPacket(2, "action|dialog_return\ndialog_name|unaccess")
                    SendPacket(3, "action|quit_to_exit")
                    SendPacket(3, "action|join_request\nname|"..setsave_world.."\ninvitedWorld|0")
                end
            end
        end
        AddCallback("casino_help_when_join","OnPacket", casino_help_when_join)
                    function collectItems(range, ispos)
                        if not ispos then
                            range = (range or 10)*32
                        end
                    
                        pkt = {}
                        pkt.type = 11
                        for _, obj in pairs(GetObjects()) do
                            posx = math.abs(GetLocal().pos_x-obj.pos_x)
                            posy = math.abs(GetLocal().pos_y-obj.pos_y)
                    
                            if posx<range and posy<range then
                                pkt.int_data = obj.oid
                                pkt.pos_x = obj.pos_x
                                pkt.pos_y = obj.pos_y
                                SendPacketRaw(pkt)
                            end
                        end
                    end
                    collectItems()
                    -- unacces leave
                    OnConsoleMessage("`0[ `3Yoshiro `0] `9unaccessing")
                    SendPacket(2, "action|input\n|text|/unaccess")
                    SendPacket(2, "action|dialog_return\ndialog_name|unaccess")
                    SendPacket(3, "action|quit_to_exit")
                    SendPacket(3, "action|join_request\nname|"..setsave_world.."\ninvitedWorld|0")
                end
            end
        end
  
                    
end


--Host command


function hide_dialogx(type, packet)
    if packet == ("action|input\n|text|/dialog") then
        if dialog_hide == true then
            dialog_hide = false
            OnConsoleMessage("`0[ `3Yoshiro `0] `9Drop dialog is now `3visible")
        RemoveCallback("hide_dialog")
        elseif dialog_hide == false then
            dialog_hide = true
            OnConsoleMessage("`0[ `3Yoshiro `0] `9Drop dialog is now `3invisible")
            AddCallback("hide_dialog","OnVarlist", hide_dialog)
        end
    return true
end
end

function settax(type, packet)
    if packet:find("action|input\n|text|/settax") then
        settax_main = packet:gsub("action|input\n|text|/settax", "")
            settax_1 = tonumber(settax_main)
                OnConsoleMessage("`0[ `3Yoshiro `0] `9tax set to : `3"..settax_1.."%")
          return true
        end
    end

AddCallback("settax","OnPacket", settax)


function daw(type, packet)
    if packet == ("action|input\n|text|/daw") then
        RunThread(function()
            daw_xd()
        end)
    return true
    end
end

AddCallback("drop_all_wls","OnPacket", daw)

function daw_xd()
    daw_command_inv = math.floor(GetItemCount(242))
    if dad_command_inv == 0 then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9You don't have wls.")
        OnTextOverlay("`9No enough wls.")
    
    for _,item in pairs(GetInventory()) do
        if item.id == 242 then
        dad_count1 = item.count
        dad_count = math.floor(dad_count1)
    end
    end
    
    AddCallback("Hide_Drop", "OnVarlist", Hide_Drop)
    for _,item in pairs(GetInventory()) do
        if item.id == 242 then
        daw_count1 = item.count
        daw_count = math.floor(daw_count1)
    end
    end
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Dropping `3" ..daw_count.. " `9wls")
    OnTextOverlay("`9Dropping `3" ..daw_count.. " `9wls")
    SendPacket(2, "action|drop\n|itemID|242")
    SendPacket(2, "action|dialog_return\ndialog_name|drop_item\nitemID|242|\ncount|"..daw_count1)
    Sleep(1000)
    RemoveCallback("Hide_Drop")
end
end

function dad(type, packet)
    if packet == ("action|input\n|text|/dad") then
        RunThread(function()
            dad_xd()
        end)
    return true
    end
end

AddCallback("drop_all_dls","OnPacket", dad)

function dad_xd()
    dad_command_inv = math.floor(GetItemCount(1796))
    if dad_command_inv == 0 then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9You don't have dls.")
        OnTextOverlay("`9No enough dls.")
    
    for _,item in pairs(GetInventory()) do
        if item.id == 1796 then
        dad_count1 = item.count
        dad_count = math.floor(dad_count1)
    end
    end
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Dropping `3" ..dad_count.. " `9dls")
    OnTextOverlay("`9Dropping `3" ..dad_count.. " `9dls")
    SendPacket(2, "action|drop\n|itemID|1796")
    SendPacket(2, "action|dialog_return\ndialog_name|drop_item\nitemID|1796|\ncount|"..dad_count1)
    Sleep(1000)
    RemoveCallback("Hide_Drop")
end
end

function settax(type, packet)
    if packet:find("action|input\n|text|/settax") then
        settax_main = packet:gsub("action|input\n|text|/settax", "")
            settax_1 = tonumber(settax_main)
                OnConsoleMessage("`0[ `3Yoshiro `0] `9tax set to : `3"..settax_1.."%")
          return true
        end
    end

AddCallback("settax","OnPacket", settax)


function dropwl(type, packet)
    if packet:find("action|input\n|text|/wl") then
          amount = packet:gsub("action|input\n|text|/wl", "")
          RunThread(function()
            cwl_delayed()
    end)
          return true
    end
end

AddCallback("cdrop_wl","OnPacket", dropwl)

function cwl_delayed()
    wl_command_inv = math.floor(GetItemCount(242))
    if wl_command_inv == 0 then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9No enough wls.")
        OnTextOverlay("`9No enough wls.")
    else
    function Hide_Drop(varlist, packet)
        if varlist[0]:find("OnDialogRequest") then
            return true
        end
    end
    
    AddCallback("Hide_Drop", "OnVarlist", Hide_Drop)
    local wl = 0
    wl = amount
    amount = tonumber(amount)
    for _,item in pairs(GetInventory()) do
        if item.id == 242 then
          if item.count < amount then
            OnConsoleMessage("`0[ `3Yoshiro `0] `9No enough wls.")
            OnTextOverlay("`9No enough wls.")
            RemoveCallback("Hide_Drop")
            return true
          else
      OnConsoleMessage("`0[ `3Yoshiro `0] `9Dropping`3" ..wl.. " `9wls")
      OnTextOverlay("`9Dropping`3" ..wl.. " `9wls")
      SendPacket(2, "action|drop\n|itemID|242")
      SendPacket(2, "action|dialog_return\ndialog_name|drop_item\nitemID|242|\ncount|" .. wl)
      Sleep(1000)
      RemoveCallback("Hide_Drop")
          end
        end
    end
end
end

-- dl

function dropdl(type, packet)
    if packet:find("action|input\n|text|/dl") then
        amount = packet:gsub("action|input\n|text|/dl", "")
          RunThread(function()
            cdl_delayed()
    end)
          return true
        end
    end

AddCallback("cdrop_dl","OnPacket", dropdl)

function cdl_delayed()
    dl_command_inv = math.floor(GetItemCount(1796))
    if dl_command_inv == 0 then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9No enough dls.")
        OnTextOverlay("`9No enough dls.")
    else
    function Hide_Drop(varlist, packet)
        if varlist[0]:find("OnDialogRequest") then
            return true
        end
    end
    
    AddCallback("Hide_Drop", "OnVarlist", Hide_Drop)
    local dl = 0
    dl = amount
    amount = tonumber(amount)
    for _,item in pairs(GetInventory()) do
      if item.id == 1796 then
        if item.count < amount then
          OnConsoleMessage("`0[ `3Yoshiro `0] `9No enough dls.")
          OnTextOverlay("`9No enough dls.")
          RemoveCallback("Hide_Drop")
          return true
        else
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Dropping`3" ..dl.. " `9dls")
    OnTextOverlay("`9Dropping`3" ..dl.. " `9dls")
    SendPacket(2, "action|drop\n|itemID|1796")
    SendPacket(2, "action|dialog_return\ndialog_name|drop_item\nitemID|1796|\ncount|" .. dl)
      Sleep(1000)
      RemoveCallback("Hide_Drop")
          end
        end
    end
end
end

-- bgl

function dropbgl(type, packet)
    if packet:find("action|input\n|text|/bgl") then
        amount = packet:gsub("action|input\n|text|/bgl", "")
          RunThread(function()
            cbgl_delayed()
    end)
          return true
        end
    end

AddCallback("cdrop_bgl","OnPacket", dropbgl)

function cbgl_delayed()
    bgl_command_inv = math.floor(GetItemCount(7188))
    if bgl_command_inv == 0 then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9No enough bgls.")
        OnTextOverlay("`9No enough bgls.")
    else
    function Hide_Drop(varlist, packet)
        if varlist[0]:find("OnDialogRequest") then
            return true
        end
    end
    
    AddCallback("Hide_Drop", "OnVarlist", Hide_Drop)
    local bgl = 0
    bgl = amount
    amount = tonumber(amount)
    for _,item in pairs(GetInventory()) do
      if item.id == 7188 then
        if item.count < amount then
          OnConsoleMessage("`0[ `3Yoshiro `0] `9No enough bgls.")
          OnTextOverlay("`9No enough bgls.")
          RemoveCallback("Hide_Drop")
          return true
        else
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Dropping`3" ..bgl.. " `9bgls")
    OnTextOverlay("`9Dropping`3" ..bgl.. " `9bgls")
    SendPacket(2, "action|drop\n|itemID|7188")
    SendPacket(2, "action|dialog_return\ndialog_name|drop_item\nitemID|7188|\ncount|" .. bgl)
      Sleep(1000)
      RemoveCallback("Hide_Drop")
          end
        end
    end
end
end

face_when_drop = "right"

function faceside1(type, packet)
    if packet == ("action|input\n|text|/side right") then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9Side for dropping is set to `3RIGHT")
        face_when_drop = "right"
    return true
    end
end

AddCallback("faceside1","OnPacket", faceside1)

function faceside2(type, packet)
    if packet == ("action|input\n|text|/side left") then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9Side for dropping is set to `3LEFT")
        face_when_drop = "left"
    return true
    end
end

AddCallback("faceside2","OnPacket", faceside2)

function sethost(type, packet)
        if packet:find("action|input\n|text|/sethost") then
            sethost_world1 = packet:gsub("action|input\n|text|/sethost", "")
                OnConsoleMessage("`0[ `3Yoshiro `0] `9Host world set to :`3"..sethost_world1)
          return true
        end
    end

AddCallback("sethost","OnPacket", sethost)

function host(type, packet)
    if packet == ("action|input\n|text|/host") then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9Warping to `9Host World")
    SendPacket(3, "action|join_request\nname|"..sethost_world1.."\ninvitedWorld|0")
    return true
    end
end
    
AddCallback("warp_host","OnPacket", host)

function setsave(type, packet)
    if packet:find("action|input\n|text|/setsave") then
        setsave_world = packet:gsub("action|input\n|text|/setsave", "")
                OnConsoleMessage("`0[ `3Yoshiro `0] `9Save world set to :`3"..setsave_world)
          return true
        end
    end

AddCallback("setsave","OnPacket", setsave)

function save(type, packet)
    if packet == ("action|input\n|text|/save") then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9Warping to `9Save World")
    SendPacket(3, "action|join_request\nname|"..setsave_world.."\ninvitedWorld|0")
    return true
    end
end
    
AddCallback("warp_save","OnPacket", save)

function auto_compress(type, packet)
    if packet == ("action|input\n|text|/compress") then
        for _,item in pairs(GetInventory()) do
            if item.id == 242 then
                if item.count >= 100 then
                    local packet = {}
                    packet.type = 10
                    packet.int_data = 242
                    SendPacketRaw(packet)
                end
            end
        end
    return true
    end
end

AddCallback("auto_compress","OnPacket", auto_compress)

function auto_compress(type, packet)
    if packet == ("action|input\n|text|/cp") then
        for _,item in pairs(GetInventory()) do
            if item.id == 242 then
                if item.count >= 100 then
                    local packet = {}
                    packet.type = 10
                    packet.int_data = 242
                    SendPacketRaw(packet)
                end
            end
        end
    return true
    end
end

AddCallback("auto_compress","OnPacket", auto_compress)


--titles command

function title6(type, packet)
    if packet == ("action|input\n|text|/title reset") then
        OnConsoleMessage("`0[ `3Yoshiro `0] `9 removing all titles")
            GetLocal().name = GetLocal().name:removeColors()
            GetLocal().name = GetLocal().name:gsub(" of Legend", "")
            GetLocal().name = GetLocal().name:gsub("Dr.", "")
        var = {}
        var[0] = "OnCountryState"
        var[1] = "jo|"
        var.netid = GetLocal().netid
        SendVarlist(var)
    return true
    end
end

function title5(type, packet)
    if packet == ("action|input\n|text|/oflegend") or packet == ("action|input\n|text|/legend") then
        titlexd = "legend"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9title effect `3OF LEGEND `9enabled !")
            GetLocal().name = GetLocal().name:removeColors()
            GetLocal().name = GetLocal().name:gsub(" of Legend", "")
            GetLocal().name = GetLocal().name:gsub("Dr.", "")
            GetLocal().name = GetLocal().name.." of Legend``"
    return true
    end
end

function title1(type, packet)
    if packet == ("action|input\n|text|/g4g") then
        titlexd = "g4g"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9title effect `3DONOR `9enabled !")
            GetLocal().name = GetLocal().name:removeColors()
            GetLocal().name = GetLocal().name:gsub(" of Legend", "")
            GetLocal().name = GetLocal().name:gsub("Dr.", "")
    return true
    end
end

function title2(type, packet)
    if packet == ("action|input\n|text|/master") then
        titlexd = "master"
            OnConsoleMessage("`0[ `3Yoshiro `0] `9title effect `3MASTED `9enabled !")
            GetLocal().name = GetLocal().name:removeColors()
            GetLocal().name = GetLocal().name:gsub(" of Legend", "")
            GetLocal().name = GetLocal().name:gsub("Dr.", "")
    return true
    end
end


function title3(type, packet)
    if packet == ("action|input\n|text|/doctor") then
        titlexd = "doctor"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9title effect `3DOCTOR `9enabled !")
            GetLocal().name = GetLocal().name:removeColors()
            GetLocal().name = GetLocal().name:gsub(" of Legend", "")
            GetLocal().name = GetLocal().name:gsub("Dr.", "")
            GetLocal().name = "Dr."..GetLocal().name
    return true
    end
end

function title4(type, packet)
    if packet == ("action|input\n|text|/maxlevel") then
        titlexd = "maxlevel"
        OnConsoleMessage("`0[ `3Yoshiro `0] `9title effect `3MAX LEVEL `9enabled !")
            GetLocal().name = GetLocal().name:removeColors()
            GetLocal().name = GetLocal().name:gsub(" of Legend", "")
            GetLocal().name = GetLocal().name:gsub("Dr.", "")
    return true
    end
end



--visual commands


function ances_chnage(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vances") then
      ances_chnage = text:gsub("/vances", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Ances :`3"..ances_chnage)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("ances_chnage","OnPacket", ances_chnage)

function neck_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vneck") then
      neck_change = text:gsub("/vneck", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Neck :`3"..neck_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("neck_change","OnPacket", neck_change)

function hair_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vhair") then
      hair_change = text:gsub("/vhair", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Hair :`3"..hair_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("hair_change","OnPacket", hair_change)

function wing_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vwing") then
      wing_change = text:gsub("/vwing", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Wings :`3"..wing_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("wing_change","OnPacket", wing_change)

function hand_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vhand") then
      hand_change = text:gsub("/vhand", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Hand :`3"..hand_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("hand_change","OnPacket", hand_change)

function shoes_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vshoes") then
      shoes_change = text:gsub("/vshoes", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Shoes :`3"..shoes_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("shoes_change","OnPacket", shoes_change)

function pant_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vpant") then
      pant_change = text:gsub("/vpant", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Pants :`3"..pant_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("pant_change","OnPacket", pant_change)

function shirt_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vshirt") then
      shirt_change = text:gsub("/vshirt", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Shirt :`3"..shirt_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("shirt_change","OnPacket", shirt_change)

function hat_change(type, packet)
  if packet:find("action|input") then
  text = packet:gsub("action|input\n|text|", "")
    if text:find("/vhat") then
      hat_change = text:gsub("/vhat", "")
    OnConsoleMessage("`0[ `3Yoshiro `0] `9Hat :`3"..hat_change)
    new_clothes() 
    return true
    end
  end
end
  
AddCallback("hat_change","OnPacket", hat_change)
